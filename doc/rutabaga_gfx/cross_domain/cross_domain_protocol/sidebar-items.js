initSidebarItems({"constant":[["CROSS_DOMAIN_CHANNEL_RING","A ring based on this particular contextâ€™s channel."],["CROSS_DOMAIN_CHANNEL_TYPE_CAMERA",""],["CROSS_DOMAIN_CHANNEL_TYPE_WAYLAND","Channel types (must match rutabaga channel types)"],["CROSS_DOMAIN_CMD_GET_IMAGE_REQUIREMENTS",""],["CROSS_DOMAIN_CMD_INIT","Cross-domain commands (only a maximum of 255 supported)"],["CROSS_DOMAIN_CMD_POLL",""],["CROSS_DOMAIN_CMD_READ",""],["CROSS_DOMAIN_CMD_RECEIVE",""],["CROSS_DOMAIN_CMD_SEND",""],["CROSS_DOMAIN_CMD_WRITE",""],["CROSS_DOMAIN_ID_TYPE_READ_PIPE","ID for Wayland pipe used for reading.  The reading is done by the guest proxy and the host proxy.  The host sends the write end of the proxied pipe over the host Wayland socket."],["CROSS_DOMAIN_ID_TYPE_VIRTGPU_BLOB","virtgpu memory resource ID.  Also works with non-blob memory resources, despite the name."],["CROSS_DOMAIN_ID_TYPE_VIRTGPU_SYNC","virtgpu synchronization resource id."],["CROSS_DOMAIN_ID_TYPE_WRITE_PIPE","ID for Wayland pipe used for writing.  The writing is done by the guest and the host proxy. The host receives the write end of the pipe over the host Wayland socket."],["CROSS_DOMAIN_MAX_IDENTIFIERS","The maximum number of identifiers (value inspired by wp_linux_dmabuf)"],["CROSS_DOMAIN_QUERY_RING","A ring for metadata queries."],["CROSS_DOMAIN_RING_NONE","No ring"]],"struct":[["CrossDomainCapabilities",""],["CrossDomainGetImageRequirements",""],["CrossDomainHeader",""],["CrossDomainImageRequirements",""],["CrossDomainInit",""],["CrossDomainReadWrite",""],["CrossDomainSendReceive",""]]});