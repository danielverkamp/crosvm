initSidebarItems({"enum":[["DeviceRegistrationError","Errors for device manager."],["LoadImageError","Errors for image loading."],["MsrAction","Handler types for userspace-msr"],["MsrExitHandlerError",""],["MsrFilter","Whether to force KVM-filtered MSRs."],["MsrRWType","Read and write permissions setting"],["MsrValueFrom","Source CPU of MSR value"],["VcpuAffinity","Mapping of guest VCPU threads to host CPU cores."],["VmImage",""]],"fn":[["add_goldfish_battery","Adds goldfish battery and returns the platform needed resources including its AML data and mmio base address"],["configure_pci_device","Config a PCI device for used by this vm."],["generate_pci_root","Creates a root PCI device for use by this Vm."],["generate_pci_topology",""],["generate_platform_bus","Creates a platform device for use by this Vm."],["load_image","Load an image from a file into guest memory."],["load_image_high","Load an image from a file into guest memory at the highest possible address."]],"mod":[["android",""],["fdt","This module writes Flattened Devicetree blobs as defined here: https://devicetree-specification.readthedocs.io/en/stable/flattened-format.html"],["pstore",""],["serial",""]],"struct":[["MsrConfig","Config option for userspace-msr handing"],["Pstore",""],["RunnableLinuxVm","Holds the elements needed to run a Linux VM. Created by `build_vm`."],["VirtioDeviceStub","The device and optional jail."],["VmComponents","Holds the pieces needed to build a VM. Passed to `build_vm` in the `LinuxArch` trait below to create a `RunnableLinuxVm`."]],"trait":[["LinuxArch","Trait which is implemented for each Linux Architecture in order to set up the memory, cpus, and system devices and to boot the kernel."]]});