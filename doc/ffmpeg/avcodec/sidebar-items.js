initSidebarItems({"enum":[["AvCodecOpenError",""],["AvFrameError",""],["TryReceiveFrameResult",""]],"struct":[["AvBuffer","Wrapper around `AVBuffer` and `AVBufferRef`."],["AvCodec","Lightweight abstraction over libavcodec’s `AVCodec` struct, allowing the query the capabilities of supported codecs and opening a session to work with them."],["AvCodecContext","A codec context from which decoding can be performed."],["AvCodecIterator","Lightweight abstraction over libavcodec’s `av_codec_iterate` function that can be used to enumerate all the supported codecs."],["AvError","An error returned by a low-level libavcodec function."],["AvFrame","An owned AVFrame, i.e. one decoded frame from libavcodec that can be converted into a destination buffer."],["AvPacket","An encoded input packet that can be submitted to `AvCodecContext::try_send_packet`."],["AvPixelFormat","Simple wrapper over `AVPixelFormat` that provides helpful methods."],["AvPixelFormatIterator","Lightweight abstraction over the array of supported pixel formats for a given codec."],["AvProfile","Simple wrapper over `AVProfile` that provides helpful methods."],["AvProfileIterator","Lightweight abstraction over the array of supported profiles for a given codec."],["DecoderContextBuilder","A builder to create a [`AvCodecContext`] suitable for decoding."]],"trait":[["AvBufferSource","Trait for types that can be used as data provider for a `AVBuffer`."]]});