initSidebarItems({"enum":[["BufferType","An abstraction over VA BufferTypes"],["GenericValue","A wrapper over VAGenericValue so we can safely access the underlying union members"],["IQMatrix","An abstraction over the IQMatrixBuffer types we support"],["PictureBegin","Represents a `Picture` after `vaBeginPicture` has been called."],["PictureEnd","Represents a `Picture` after `vaEndPicture` has been called."],["PictureNew","Represents a `Picture` that has just been created."],["PictureParameter","An abstraction over the PictureParameterBuffer types we support"],["PictureRender","Represents a `Picture` after `vaRenderPicture` has been called."],["PictureSync","Represents a `Picture` after `vaSyncSurface` has been called on the underlying surface."],["SliceParameter","An abstraction over the SliceParameterBuffer types we support"]],"mod":[["VAConfigAttribType",""],["VAEntrypoint",""],["VAProfile",""],["VASurfaceAttribType",""],["bindings","This module implements the bindgen C FFI bindings for use within this crate"],["buffer",""],["buffer_type",""],["config",""],["constants",""],["context",""],["display",""],["generic_value",""],["image",""],["picture",""],["status",""],["surface",""],["usage_hint",""]],"struct":[["BoolCoderContextVPX","Wrapper over the VABoolCoderContextVPX FFI type"],["Buffer","A wrapper type representing a buffer created with vaCreateBuffer"],["Config","An owned VAConfig that is tied to the lifetime of a particular VADisplay"],["Context","An owned Context that is tied to the lifetime of a particular Display"],["Display","An owned VADisplay"],["H264PicFields","Wrapper over the `pic_fields` bindgen field in VAPictureParameterBufferH264"],["H264SeqFields","Wrapper over the `seq_fields` bindgen field in VAPictureParameterBufferH264"],["IQMatrixBufferH264","Wrapper over the VAIQMatrixBufferH264 FFI type"],["IQMatrixBufferMPEG2","Wrapper over the VAIQMatrixBufferMPEG2 FFI type"],["IQMatrixBufferVP8","Wrapper over the VAIQMatrixBufferVP8 FFI type"],["Image","An owned VAImage that is tied to the lifetime of a given Picture. A VAImage is used to either get the surface data to client memory, or to copy image data in client memory to a surface."],["MPEG2PictureCodingExtension","Wrapper over the `picture_coding_extension` bindgen field in VAPictureParameterBufferMPEG2"],["Picture","An abstraction over VABuffers and a VASurface suitable for decoding with vaBeginPicture, vaRenderPicture, vaEndPicture “surface” will have valid raw picture data after “begin”, “render”, “end” and “sync” are called, in this order."],["PictureH264","Wrapper over the VAPictureH264 FFI type"],["PictureParameterBufferH264","A wrapper over VAPictureParameterBufferH264 FFI type"],["PictureParameterBufferMPEG2","Wrapper over the PictureParameterBufferMPEG2 FFI type."],["PictureParameterBufferVP8","Wrapper over the PictureParameterBufferVP8 FFI type"],["PictureParameterBufferVP9","Wrapper over the PictureParameterBufferVP9 FFI type"],["ProbabilityDataBufferVP8","Wrapper over the VAProbabilityDataBufferVP8 FFI type"],["SegmentParameterVP9","Wrapper over the VASegmentParameterVP9 FFI type"],["SliceParameterBufferH264","Wrapper over the VASliceParameterBufferH264 FFI type"],["SliceParameterBufferMPEG2","Wrapper over the VASliceParameterBufferMPEG2 FFI type"],["SliceParameterBufferVP8","Wrapper over the VASliceParameterBufferVP8 FFI type"],["SliceParameterBufferVP9","Wrapper over the VASliceParameterBufferVP9 FFI type"],["Surface","An owned VASurface that is tied to the lifetime of a particular VADisplay"],["UsageHint","Gives the driver a hint of intended usage to optimize allocation (e.g. tiling)"],["VP8PicFields","Wrapper over the `pic_fields` bindgen field in VAPictureParameterBufferVP8"],["VP9PicFields","Wrapper over the `pic_fields` bindgen field in VAPictureParameterBufferVP9"],["VP9SegmentFlags","Wrapper over the `segment_flags` bindgen field in VASegmentParameterVP9"]],"trait":[["PictureReclaimableSurface","Represents a state where one can reclaim the underlying `Surface` for this `Picture`. This is true when either no decoding has been initiated or, alternatively, when the decoding operation has completed for the underlying `vaSurface`"],["PictureState","A `Picture` will only have valid YUV data after a sequence of operations are performed in a particular order. This order correspond to the following VA-API calls: vaBeginPicture, vaRenderPicture, vaEndPicture and vaSyncSurface. This trait enforces this ordering by implementing the Typestate pattern to constrain what operations are available in what particular states."]],"type":[["VAConfigAttrib",""],["VAImageFormat",""]]});