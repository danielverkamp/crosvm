initSidebarItems({"constant":[["ACPI_HI_RSDP_WINDOW_BASE",""],["BOOT_STACK_POINTER",""],["CMDLINE_MAX_SIZE",""],["CMDLINE_OFFSET",""],["EBX_INTEL_GENU",""],["ECX_INTEL_NTEL",""],["EDX_INTEL_INEI",""],["FIRST_ADDR_PAST_32BITS",""],["GB",""],["HIGH_MMIO_MAX_END",""],["KERNEL_64BIT_ENTRY_OFFSET",""],["KERNEL_START_OFFSET",""],["MB",""],["OSC_STATUS_UNSUPPORT_UUID",""],["PCIE_VCFG_MMIO_SIZE",""],["PCI_HB_OSC_CONTROL_PCIE_AER",""],["PCI_HB_OSC_CONTROL_PCIE_CAP",""],["PCI_HB_OSC_CONTROL_PCIE_HP",""],["PCI_HB_OSC_CONTROL_PCIE_PME",""],["PCI_HB_OSC_CONTROL_SHPC_HP",""],["SETUP_DTB",""],["START_OF_RAM_32BITS",""],["TSS_ADDR",""],["X86_64_FDT_MAX_SIZE",""],["X86_64_IRQ_BASE",""],["X86_64_SCI_IRQ",""],["X86_64_SERIAL_1_3_IRQ",""],["X86_64_SERIAL_2_4_IRQ",""],["ZERO_PAGE_OFFSET",""]],"enum":[["CpuManufacturer",""],["E820Type",""],["Error",""],["MsrError",""]],"fn":[["add_e820_entry","Add an e820 region to the e820 map. Returns Ok(()) if successful, or an error if there is no space left in the map."],["arch_memory_regions","Returns a Vec of the valid memory addresses. These should be used to configure the GuestMemory structure for the platform. For x86_64 all addresses are valid from the start of the kernel except a carve out at the end of 32bit address space."],["bios_start","The x86 reset vector for i386+ and x86_64 puts the processor into an “unreal mode” where it can access the last 1 MB of the 32-bit address space in 16-bit mode, and starts the instruction pointer at the effective physical address 0xFFFF_FFF0."],["check_itmt_cpu_support",""],["configure_system",""],["get_cpu_manufacturer",""],["init_low_memory_layout",""],["insert_msr",""],["insert_msrs",""],["phys_addr",""],["read_pci_mmio_before_32bit",""],["read_pcie_cfg_mmio",""],["set_enable_pnp_data_msr_config",""],["set_itmt_msr_config",""]],"mod":[["acpi",""],["bootparam",""],["bzimage",""],["cpuid",""],["fdt",""],["gdt",""],["interrupts",""],["mpspec",""],["mptable",""],["msr",""],["msr_index",""],["regs",""],["smbios",""]],"static":[["LOW_MEMORY_LAYOUT",""]],"struct":[["LowMemoryLayout",""],["PciRootOSC",""],["X8664arch",""]],"type":[["Result",""]]});