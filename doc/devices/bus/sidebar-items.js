initSidebarItems({"enum":[["BusDeviceEntry",""],["BusType",""],["Error",""],["HostHotPlugKey","The key to identify hotplug device from host view. like host sysfs path for vfio pci device, host disk file path for virtio block device"]],"struct":[["Bus","A device container for routing reads and writes over some address space."],["BusAccessInfo","Information about how a device was accessed."],["BusEntry",""],["BusRange","Holds a base and length representing the address space occupied by a `BusDevice`."],["ConfigWriteResult","Result of a write to a deviceâ€™s PCI configuration space. This value represents the state change(s) that occurred due to the write."]],"trait":[["BusDevice","Trait for devices that respond to reads or writes in an arbitrary address space."],["BusDeviceObj","Trait for generic device abstraction, that is, all devices that reside on BusDevice and want to be converted back to its original type. Each new foo device must provide as_foo_device() + as_foo_device_mut() + into_foo_device(), default impl methods return None."],["BusDeviceSync",""],["BusResumeDevice",""],["HotPlugBus","Trait for devices that notify hotplug event into guest"]],"type":[["Result",""]]});