initSidebarItems({"enum":[["VhostUserListener",""]],"fn":[["create_vu_console_device","Return a new vhost-user console device. `params` are the deviceâ€™s configuration, and `keep_rds` is a vector into which `RawDescriptors` that need to survive a fork are added, in case the device is meant to run within a child process."],["parse_wayland_sock",""],["run_block_device","Starts a vhost-user block device. Returns an error if the given `args` is invalid or the device fails to run."],["run_console_device","Starts a vhost-user console device. Returns an error if the given `args` is invalid or the device fails to run."],["run_fs_device","Starts a vhost-user fs device. Returns an error if the given `args` is invalid or the device fails to run."],["run_gpu_device",""],["run_net_device","Starts a vhost-user net device. Returns an error if the given `args` is invalid or the device fails to run."],["run_snd_device","Starts a vhost-user snd device. Returns an error if the given `args` is invalid or the device fails to run."],["run_vsock_device","Returns an error if the given `args` is invalid or the device fails to run."],["run_wl_device","Starts a vhost-user wayland device. Returns an error if the given `args` is invalid or the device fails to run."]],"mod":[["block",""],["console",""],["fs",""],["gpu",""],["handler","Library for implementing vhost-user device executables."],["listener",""],["net",""],["snd",""],["vsock",""],["vvu","Implement a userspace driver for the virtio vhost-user device."],["wl",""]],"struct":[["BlockOptions","Block device"],["ConsoleOptions","Console device"],["FsOptions","FS Device"],["GpuOptions","GPU device"],["NetOptions","Net device"],["SndOptions","Snd device"],["VsockOptions","Vsock device"],["WlOptions","Wayland device"]],"trait":[["VhostUserBackend","Trait for vhost-user backend."],["VhostUserDevice","A trait for vhost-user devices."],["VhostUserListenerTrait","Trait that the platform-specific type `VhostUserListener` needs to implement. It contains all the methods that are ok to call from non-platform specific code."]]});