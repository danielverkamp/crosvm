initSidebarItems({"constant":[["PCI_VENDOR_ID_INTEL",""],["PCI_VENDOR_ID_REDHAT",""]],"enum":[["CrosvmDeviceId",""],["PciInterruptPin","PCI has four interrupt pins A->D."]],"mod":[["ac97",""],["ac97_bus_master",""],["ac97_mixer",""],["ac97_regs",""],["coiommu","This is the CoIOMMU backend implementation. CoIOMMU is a virtual device which provide fine-grained pinning for the VFIO pci-passthrough device so that hypervisor doesn’t need to pin the enter VM’s memory to improve the memory utilization. CoIOMMU doesn’t provide the intra-guest protection so it can only be used for the TRUSTED passthrough devices."],["msi",""],["msix",""],["pci_address",""],["pci_configuration",""],["pci_device",""],["pci_root",""],["pcie",""],["pvpanic","pvpanic is a simulated device, through which a guest panic event is sent to a VMM. This was initially developed for qemu with linux in-tree drivers and opensource driver for windows also exist now. https://fossies.org/linux/qemu/docs/specs/pvpanic.txt"],["stub","Implements a stub PCI device. This can be used to put a device on the PCI bus that will show up in PCI device enumeration with the configured parameters. The device will otherwise be non-functional, in particular it doesn’t have any BARs, IRQs etc. and neither will it handle config register interactions."],["vfio_pci",""]],"struct":[["PciId","A wrapper structure for pci device and vendor id."]]});